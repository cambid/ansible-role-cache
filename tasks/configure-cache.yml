---

- name: Create default cache group
  group: name={{ hs_cache_group }} state=present

- name: Create default cache manager group
  group: name={{ hs_cachemgr_group }} state=present

- name: Create default cache user
  user: name={{ hs_cache_usr }} comment="cacheusr" group={{ hs_cache_group }}
  when: hs_cache_usr != 'root'

- name: Create default cache system users
  user: name={{ hs_cache_usr_sys }} comment="cache system usr" group={{ hs_cachemgr_group }}
  when: hs_cache_usr != 'root'

- name: Create full Caché install temp directory
  file: path={{ common_install_base_path }}/{{ hs_install_unpack_path }}
        mode=0777
        state=directory

- name: Unarchive install file
  unarchive:
    src={{ common_path_to_distribution_files_Cache }}/{{ hs_distribution_file }}.tar.gz
    dest={{ common_install_base_path }}/{{ hs_install_unpack_path }}
    copy=yes
    mode=0777
    creates="{{ common_install_base_path }}/{{ hs_install_unpack_path }}/{{ hs_distribution_file }}/cinstall"

- name: Create hs install directory
  file: path={{ ISC_PACKAGE_INSTALLDIR }} state=directory

- name: Process parameters file
  template:
    src="{{ hs_parameterfile_name }}"
    dest="{{ common_install_base_path }}"
  tags: template


#### Example unattended install using parameters file to show how ansible templates files can be used.
# (see ./roles/hs_server_common/templates/parameters_hs20152_rh64.isc).
# A parameters file is useful when you want to install and configure Caché and use CSPGateway with a web server other than the Caché internal Apache version.
# Its shown here because installing with a parameters file requires a user response to go ahead.

- name: Unattended install of hs/Cache from parameters file
  shell: "{{ hs_parameterfile_location_hs2015 }} {{ common_install_base_path }}/{{ hs_parameterfile_name }}"
  when: ansible_os_family == 'Suse' or ansible_os_family == 'RedHat'
  args:
    creates: "{{ ISC_PACKAGE_INSTALLDIR }}/cinstall.log"

# - name: unattended install of hs/Cache using cinstall_silent
#   shell: >
#     ISC_PACKAGE_INSTANCENAME="{{ ISC_PACKAGE_INSTANCENAME }}"
#     ISC_PACKAGE_INSTALLDIR="{{ ISC_PACKAGE_INSTALLDIR }}"
#     ISC_PACKAGE_UNICODE="{{ ISC_PACKAGE_UNICODE }}"
#     ISC_PACKAGE_INITIAL_SECURITY="{{ ISC_PACKAGE_INITIAL_SECURITY }}"
#     ISC_PACKAGE_MGRUSER="{{ ISC_PACKAGE_MGRUSER }}"
#     ISC_PACKAGE_MGRGROUP="{{ ISC_PACKAGE_MGRGROUP }}"
#     ISC_PACKAGE_USER_PASSWORD="{{ ISC_PACKAGE_USER_PASSWORD }}"
#     ISC_PACKAGE_CACHEUSER="{{ ISC_PACKAGE_CACHEUSER }}"
#     ISC_PACKAGE_CACHEGROUP="{{ ISC_PACKAGE_CACHEGROUP }}"
#     ISC_PACKAGE_CSP_CONFIGURE="{{ ISC_PACKAGE_CSP_CONFIGURE }}"
#     ISC_PACKAGE_CLIENT_COMPONENTS="{{ ISC_PACKAGE_CLIENT_COMPONENTS }}"
#     ISC_CSP_GATEWAY_DIR="{{ ISC_CSP_GATEWAY_DIR }}"
#     ISC_PACKAGE_CSP_SERVERTYPE="{{ ISC_PACKAGE_CSP_SERVERTYPE }}" ./cinstall_silent
#     chdir="{{ common_install_base_path }}/{{ hs_install_unpack_path }}/{{ hs_distribution_file }}"
#   args:
#     creates: "{{ ISC_PACKAGE_INSTALLDIR }}/cinstall.log"

- name: copy hs key
  copy: src="{{ common_path_to_distribution_files_Cache }}/{{ cache_key_file }}" dest="{{ ISC_PACKAGE_INSTALLDIR }}/mgr"
  notify: restart Cache
  tags: copy,license

- name: check default cache instance
  command: "ccontrol default"
  register: default_cache_instance
  changed_when: false

- name: Set default cache instance
  command: "ccontrol default {{ ISC_PACKAGE_INSTANCENAME }}"
  when: default_cache_instance.stdout != "{{ ISC_PACKAGE_INSTANCENAME }}"

- name: copy apache configuration for csp-gateway
  copy:
    src="{{ path_to_tmp_files }}/csp.conf"
    dest=/etc/apache2/conf.d/
    mode=644
    owner=root
    group=root
  notify: restart apache2
  tags: configuration

- name: copy CSP.ini to path
  copy:
    src="{{ path_to_tmp_files }}/CSP.ini"
    dest="{{ ISC_CSP_GATEWAY_DIR }}/bin"
    mode=660
    owner=root
    group=www
  notify: restart apache2
  tags: configuration
